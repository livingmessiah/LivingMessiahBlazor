@using LivingMessiah.Web.Infrastructure
@using FeastDayType = LivingMessiah.Web.Features.Calendar.Enums.FeastDay

<div class="row mt-3">
	<div class="col-3">
		<p class="mt-3 text-center fw-bold">@GregorianDate</p>
	</div>

	<div class="col-6 text-center">
		<div class="card bg-primary text-white">
			<div class="card-body">
				<h4><i class="@FeastDayType!.Icon"></i> <b>@FeastDayType!.PlannerTitle</b> <span class="hebrew"> @FeastDayType!.Hebrew</span> </h4>
				<span class="badge @BadgeColor text-dark fw-bold fs-6">@DaysDifferrentFormat</span> @SuffixDescription
			</div>
		</div>
		
	</div>

	<div class="col-3">
		<p class="mt-3 text-center fw-bold">@HebrewDate</p>
	</div>

</div>


@code {

	[Parameter, EditorRequired] public FeastDayType? FeastDayType { get; set; }
	[Parameter, EditorRequired] public DateTime? Today { get; set; }

	protected string BadgeColor = "bg-warning-subtle";
	protected int DaysDifferrent = 0;
	protected string DaysDifferrentFormat = "";
	protected string SuffixDescription = "Passed, Present or Future?";
	protected string? GregorianDate;
	protected string? HebrewDate;

	protected override void OnParametersSet()
	{
		GregorianDate = Today!.Value.ToString(DateFormat.FeastDayPlanner);
		HebrewDate = DateUtil.ToTransliteratedHebrewDateString(Today.Value);

		if (Today >= FeastDayType!.Range.Min && Today <= FeastDayType!.Range.Max)
		{
			BadgeColor = "bg-success-subtle";
			SuffixDescription = $"day";
			DaysDifferrent = (int)(Today.Value - FeastDayType!.Range.Min).TotalDays;
			DaysDifferrentFormat = $"{DaysDifferrent}{DateUtil.GetDaySuffix(DaysDifferrent)}";
		}
		else
		{
			if (Today < FeastDayType!.Range.Min)
			{
				BadgeColor = "bg-warning-subtle";
				SuffixDescription = "days ahead";
				DaysDifferrent = (int)(FeastDayType!.Range.Min - Today.Value).TotalDays;
				DaysDifferrentFormat = DaysDifferrent.ToString();
			}
			else
			{
				BadgeColor = "bg-danger-subtle";
				SuffixDescription = "days in the past";
				DaysDifferrent = (int)(Today.Value - FeastDayType!.Range.Max).TotalDays;
				DaysDifferrentFormat = DaysDifferrent.ToString();
			}
		}
	}


}
