@using Grid = Syncfusion.Blazor.Grids

<div class="col-lg-12 control-section">
	<div class="content-wrapper">
		<div class="row mt-2">

			<SfGrid ID="Grid" @ref="refGrid"
							DataSource="@QueryParm"
							Toolbar="@(new List<string>() { _CsvArg })"
							AllowExcelExport="true" >
				<GridEvents OnToolbarClick="ToolbarClickHandler"
										TValue="Query">
				</GridEvents>
				<GridColumns>
					<GridColumn Field=@nameof(Query.ShabbatDateMD) HeaderText="Shabbat Date" Width="50"></GridColumn>
					<GridColumn Field=@nameof(Query.Torah) HeaderText="Last Name" Width="70"></GridColumn>
					<GridColumn Field=@nameof(Query.Haftorah) HeaderText="Haftorah" Width="70"></GridColumn>
					<GridColumn Field=@nameof(Query.Brit) HeaderText="Brit" Width="70"></GridColumn>
				</GridColumns>
			</SfGrid>

		</div>
	</div>
</div>

@code {
	[Parameter, EditorRequired] public List<Query>? QueryParm { get; set; }

	private SfGrid<Query>? refGrid;

	public async Task ToolbarClickHandler(Syncfusion.Blazor.Navigations.ClickEventArgs args)
	{
		if (args.Item.Id == _CsvArgId)
		{
			await this.refGrid!.ExportToCsvAsync();
		}
	}

	protected const string _CsvArg = "CsvExport";
	protected const string _CsvArgId = "Grid_csvexport";

}
