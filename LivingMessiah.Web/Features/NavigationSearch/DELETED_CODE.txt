

<nav class="navbar navbar-light bg-light">
	<div class="container-fluid">
		<a class="navbar-brand">Navbar</a>
		<form class="d-flex">
			<input class="form-control me-2" @bind="item" 
				type="search" aria-label="Search">
			<button class="btn btn-outline-success" 
				type="submit" @onclick="() => SearchClicked()">
				Search
			</button>
		</form>
	</div>
</nav>


@if (Msg is not null)
{
	<p>@Msg</p>
} 

	[Inject] NavigationManager? NavigationManager { get; set; }
	[Inject] public ILogger<NavigationSearch> Logger { get; set; }
	
	protected string? item;
	public string? Msg { get; set; }

	void SearchClicked()
	{
		//string inside = nameof(NavigationSearch) + "!" + nameof(SearchClicked);
		if (String.IsNullOrEmpty(item))
		{
			//Logger!.LogDebug(string.Format("Inside {0}; item is null", inside));
			Msg = "item is null";
		}
		else
		{
			Link? link;
			link = LinkService!.GetSitemapLinks().Where(w => w.Title!.ToLower() == item.ToLower()).FirstOrDefault();
			if (link is not null)
			{
				//Logger.LogInformation(string.Format("Inside {0}; item:{1} Navigating to {2}; ", inside, item, link.Index));
				NavigationManager!.NavigateTo($"{link.Index}", true);
			}
			else
			{
				//Logger!.LogDebug(string.Format("Inside {0}; link is null", inside));
				Msg = "link is null";
			}

		}
	}
