@using LunarMonthType = LivingMessiah.Web.Features.Calendar.Enums.LunarMonth

@using LivingMessiah.Web.Features.FeastDayPlanner.Constants

<div class="row mt-4 mb-1">
	<div class="col-12">
		<h5 class="text-center"><b>@LunarMonthType!.FullName</b> @LunarMonthType.Date.ToString(DateFormat.ddd_MMM_dd_YYYY)</h5>

		@if (@DaysDifferent != 0)
		{
		<p class="text-center">
			<span class="badge @BadgeColor text-dark fw-bold">@DaysDifferent</span> days until new moon
		</p>
		}
		else
		{
			<h3 class="text-center text-danger">New Moon!!!</h3>
		}

	</div>
</div> 

<div class="progress-stacked">
	<div class="progress" role="progressbar" aria-label="moon age" aria-valuenow="@DaysOld" aria-valuemin="0" aria-valuemax="100"
			 style="width: @DaysOld%">
		<div class="progress-bar bg-secondary"></div>
	</div>
	<div class="progress" role="progressbar" aria-label="days until new moon" aria-valuenow="@PercentUntilNewMoon" aria-valuemin="0" aria-valuemax="100"
			 style="width: @PercentUntilNewMoon%">
		<div class="progress-bar bg-success"></div>
	</div>
</div>

<div class="row mt-0">
	<div class="col-12">
		<div class="progress" role="progressbar" aria-label="Moon-O-Meter" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">
			<div class="progress-bar bg-secondary-subtle" style="width: 100%">
				&nbsp;
			</div>
		</div>
	</div>
</div>

<div class="row mt-0">
	<div class="col-12">

		<div class="progress-stacked" style="height: @Progress.HeightMedium">

			<div class="progress" role="progressbar" style="width: 2%; height: @Progress.HeightMedium">
				<div class="progress-bar bg-secondary-subtle">
					&nbsp;
				</div>
			</div>

			@foreach (var item in Enums.Phases.List.OrderBy(o => o.Value))
			{
				<div class="progress" role="progressbar" style="width: 12%; height: @Progress.HeightMedium">
					<div class="progress-bar bg-secondary-subtle">
						<h1 class="text-dark">@item.Emoji</h1>
					</div>
				</div>
			}

			<div class="progress" role="progressbar" style="width: 2%; height: @Progress.HeightMedium">
				<div class="progress-bar bg-secondary-subtle">
					&nbsp;
				</div>
			</div>

		</div>

	</div>
</div>

<div class="row mt-0">
	<div class="col-12">
		<div class="progress" role="progressbar" aria-label="Moon-O-Meter" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">
			<div class="progress-bar bg-secondary-subtle" style="width: 100%">
				<span class="text-dark text-center mt-0"><i>Moon-O-Meter</i></span>
			</div>
		</div>
	</div>
</div>

@* <h5 class="text-center mt-0"><span class="badge bg-secondary-subtle text-black-50"><i>Moon-O-Meter</i></span></h5> *@
@* <p class="text-center mt-0"><i>Moon-O-Meter</i></p> *@



@code {
	[Parameter, EditorRequired] public LunarMonthType? LunarMonthType { get; set; }
	//[Parameter, EditorRequired] public int DaysDifferent { get; set; }
	//[Parameter, EditorRequired] public int PercentUntilNewMoon { get; set; }
	[Parameter, EditorRequired] public ProgressBarVM? VM { get; set; }

	public int DaysOld { get; set; }  
	public int PercentUntilNewMoon { get; set; }
	public int DaysDifferent { get; set; } 
	public string? BadgeColor { get; set; }

	//public int PercentUntilNewMoon { get; set; }
	//string percent = "44%";

	protected override void OnInitialized()
	{
		base.OnInitialized();
		//string inside = $"page {Page.Index}; class: {nameof(Index)}";
		DaysOld = VM!.DaysOld;
		DaysDifferent = VM!.DaysDifferent;
		PercentUntilNewMoon = VM!.PercentUntilNewMoon;
		BadgeColor = VM!.BadgeColor;

	}

}
