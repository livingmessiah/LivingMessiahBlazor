@using Microsoft.Extensions.Logging;

@inject ILogger<TableOfContentFilter> Logger

<ul class="mt-2 text-end">
	@foreach (var item in Enums.NavItem.List.OrderBy(o => o.Value))
	{
		<li class="nav-item ">
			<button @onclick="@(e => ButtonClicked(item))"
							class="nav-link" type="button"
							id="@item.ButtonId">
				@item.Value <small>@item.Title</small>
			</button>
		</li>
	}
</ul> 


@code {
	[Parameter, EditorRequired] public required Enums.NavItem? CurrentFilter { get; set; }
	[Parameter] public EventCallback<Enums.NavItem> OnFilterSelected { get; set; }

	protected Enums.NavItem currentNavItem = Enums.NavItem.HebrewPassOverOrCrossOver;
	private void ButtonClicked(Enums.NavItem filter)
	{
		currentNavItem = filter;
		OnFilterSelected.InvokeAsync(filter);
	}

}
