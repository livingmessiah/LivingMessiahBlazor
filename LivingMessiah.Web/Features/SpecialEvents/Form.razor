@using LivingMessiah.Web.Features.SpecialEvents.Enums
@using Blazored.FluentValidation;

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<EditForm Model="VM"
					OnValidSubmit="HandleValidSubmit"
					class="card card-body bg-light mt-1">
	<FluentValidationValidator @ref="_fluentValidationValidator" DisableAssemblyScanning="@true" />
	<ValidationSummary />

	<fieldset class="mt-3">
		<legend class="text-primary">Dates</legend>

		<div class="row mt-n2">

			<div class="col-sm-6">
				<label for="eventTypeEnum" class="control-label">Event Type</label>
				<InputSelect id="type" @bind-Value="VM!.SpecialEventTypeId" class="form-control">
					@foreach (var item in SpecialEventType.List.ToList())
					{
						<option value="@item.Value">@item.Descr</option>
					}
				</InputSelect>
				<ValidationMessage For="@(() => VM.SpecialEventTypeId)" />
			</div>

			<div class="col-sm-6">
				<div class="mb-3">
					<label for="eventDate" class="control-label">Event Date</label>
					<InputDate id="eventDate" class="form-control" @bind-Value="VM.EventDate" />
					<ValidationMessage For="@(() => VM.EventDate)" />
				</div>
			</div>

		</div>

		<div class="row mt-n2">

			<div class="col-sm-6">
				<div class="mb-3">
					<label for="showBeginDate" class="control-label">Show Start Date</label>

					<InputDate id="showBeginDate" class="form-control" @bind-Value="VM.ShowBeginDate" />
					<ValidationMessage For="@(() => VM.ShowBeginDate)" />
				</div>
			</div>

			<div class="col-sm-6">
				<div class="mb-3">
					<label for="showEndDate" class="control-label">Show End Date</label>
					<InputDate id="showBeginDate" class="form-control" @bind-Value="VM.ShowEndDate" />
					<ValidationMessage For="@(() => VM.ShowEndDate)" />
				</div>
			</div>

		</div>

	</fieldset>

	<fieldset class="mt-3">
		<legend class="text-primary">Title/SubTitle</legend>

		<div class="row mt-n2">

			<div class="col-sm-4">
				<div class="mb-3">
					<label for="title" class="control-label">Title</label>
					<InputText id="title" class="form-control" @bind-Value="VM.Title" />
					<ValidationMessage For="@(() => VM.Title)" />
				</div>
			</div>

			<div class="col-sm-8">
				<div class="mb-3">
					<label for="subTitle" class="control-label">[Sub-Title]</label>
					<InputText id="subTitle" class="form-control" @bind-Value="VM.SubTitle" />
					<ValidationMessage For="@(() => VM.SubTitle)" />
				</div>
			</div>

		</div>
	</fieldset>

	<fieldset class="mt-3">
		<legend class="text-primary">Image Url</legend>
		<div class="row mt-n2">
			<div class="col-sm-12">
				<div class="mb-3">
					<label for="imageUrl" class="control-label">Image Url</label>
					<InputText id="imageUrl" class="form-control" @bind-Value="VM.ImageUrl" />
					<ValidationMessage For="@(() => VM.ImageUrl)" />
				</div>
			</div>
		</div>
	</fieldset>

	<fieldset class="mt-3">
		<legend class="text-primary">Website</legend>

		<div class="row mt-n2">

			<div class="col-sm-4">
				<div class="mb-3">
					<label for="websiteUrl" class="control-label">[Website Url]</label>
					<InputText id="websiteUrl" class="form-control" @bind-Value="VM.WebsiteUrl" />
					<ValidationMessage For="@(() => VM.WebsiteUrl)" />
				</div>
			</div>

			<div class="col-sm-4">
				<div class="mb-3">
					<label for="websiteDescr" class="control-label">[Website Description]</label>
					<InputText id="websiteDescr" class="form-control" @bind-Value="VM.WebsiteDescr" />
					<ValidationMessage For="@(() => VM.WebsiteDescr)" />
				</div>
			</div>

			<div class="col-sm-4">
				<div class="mb-3">
					<label for="youTubeId" class="control-label">[YouTubeId]</label>
					<InputText id="youTubeId" class="form-control" @bind-Value="VM.YouTubeId" />
					<ValidationMessage For="@(() => VM.YouTubeId)" />
				</div>
			</div>

		</div>
	</fieldset>

	<fieldset class="mt-3">
		<legend class="text-primary">Description</legend>
		<div class="row mt-n2">
			<div class="col-sm-12">
				<div class="mb-3">
					<InputTextArea id="description" class="form-control" @bind-Value="VM.Description" />
					<ValidationMessage For="@(() => VM.Description)" />

				</div>
			</div>
		</div>

	</fieldset>

	<div class="row">
		<div class="col-sm-6">
			<div class="mb-3">

				<button type="submit" class="@Constants.SaveButton.Color">
					<i class="@Constants.SaveButton.Icon"></i> @State!.Value.FormMode!.SubmitText
				</button>

				@*
				Cancel button has to be a div (ie not a button) thereby not triggering validation which is what I want
				[Blazor Modal Form Validation: You have to click the cancel button twice to close the modal when you delete a form field](https://stackoverflow.com/a/67737357/41106)
				*@
				<div @onclick="@(e => CancelActionHandler())" class="@Constants.CancelButton.Color">
					<i class="@Constants.CancelButton.Icon"></i> @Constants.CancelButton.Text
				</div>

			</div>
		</div>
		<div class="col-sm-6"></div>
	</div>

</EditForm>

@* https://blazor.syncfusion.com/demos/rich-text-editor/overview?theme=bootstrap5 *@

@using Syncfusion.Blazor.RichTextEditor

<div class="control-section" id="rte-form">
	<div class="content-wrapper">
		<div id='content' class='box-form' style="margin: 0 auto; max-width:750px; padding:25px">
			<EditForm Model="@MDVM" OnValidSubmit="@ValidSubmit">
				<DataAnnotationsValidator />
				<SfRichTextEditor ShowCharCount="true" @bind-Value="@MDVM.Description" MaxLength="3000" Placeholder="Type something... (> 10 < 3,000)" />
				<ValidationMessage For="@(() => MDVM.Description)" />
				<div class="btn-grp">
					<button class="samplebtn e-control e-btn" type="submit" data-ripple="true">Submit</button>
				</div>
			</EditForm>
		</div>
	</div>
</div>