@page "/TEST_zSfListBox"

<h3>zSfListBoxTEST</h3>

<hr class="warning" />

@if (Registration != null)
{

	<EditForm Model="Registration"
						OnValidSubmit="HandleValidSubmit"
						class="card card-body bg-light mt-5">
		<DataAnnotationsValidator />
		<ValidationSummary />


		<fieldset class="mt-3">
			<legend class="text-primary">Location</legend>
			<div class="row mt-n2">

				<div class="col-sm-4">
					<div class="card bg-light mb-3">
						<div class="card-body">
							<p class="card-text">Sukkot 2021 is a unique year in that we have <b>three</b> locations which to select from.</p>
						</div>
					</div>
				</div>


				@*<div class="col-sm-4">
						<div class="form-group">
							<SfListBox TValue="@SukkotApi.Domain.Enums.LocationSimpleEnum"
												 TItem="string"
												 @bind-Value="@LocationSelected"
												 DataSource="@LocationSimpleEnumValues">
							</SfListBox>
						</div>
					</div>

					<div class="col-sm-4">
						<div class="form-group">
							<SfListBox TValue="@SukkotApi.Domain.Enums.LocationEnum"
												 TItem="string"
												 @bind-Value="@LocationSelected"
												 DataSource="@LocationEnumValues">
							</SfListBox>
						</div>
					</div>*@

				@*<div class="col-sm-4">
						<div class="form-group">
							<SfListBox TValue="@SukkotApi.Domain.Enums.LocationEnum"
												 TItem="string"
												 @bind-Value="@LocationSelected"
												 DataSource="@SukkotApi.Domain.Enums.Location.FromEnum()">
								<ListBoxEvents TValue="string[]" ValueChange="HandleLocationChange" TItem="@SukkotApi.Domain.Enums.Location"></ListBoxEvents>
							</SfListBox>
						</div>
					</div>*@

			</div>
		</fieldset>

		<div class="row">
			<div class="col-sm-6">
				<p>Handle Submit</p>
			</div>
		</div>
	</EditForm>

}
else if (LoadFailed)
{
	<p class="text-danger"><em>Could not load because of an Error</em></p>
}
else
{
	<p><em>Loading...</em></p>
}

@code {
	public Registration Registration { get; set; }

	protected bool LoadFailed = true;


	protected async Task HandleValidSubmit()
	{
		//Logger.LogDebug($"Inside {nameof(HandleValidSubmit)}, UI.EditMode: {UI.EditMode} ");

	}

	//private void HandleLocationChange(ListBoxChangeEventArgs<string[], VehicleData> args)
	//{
	//	//Triggers when value changed
	//	Logger.LogDebug("");
	//}

}

