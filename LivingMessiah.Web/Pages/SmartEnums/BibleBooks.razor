@page "/SmartEnums/BibleBooks"
@using LivingMessiah.Domain.Bible

<PageTitle>SmartEnums | BibleBooks</PageTitle>

<h1>Bible Books</h1>
<ul>
		<li><a href="/SmartEnums">Smart Enums Index</a></li>
</ul>


<p class="text-muted"><small>Test <i>SmartEnum</i></small></p>

<div class="card mb-3 border-warning">
	<div class="card-header">
		<h4 class="card-title text-center">Direct reference to properties</h4>
	</div>

	<div class="card-body">

		<dl class="row">
			<dt class="col-6"><span class="float-end"><code>Book.Deuteronomy</code>:</span></dt>
			<dd class="col-6">@Book.Deuteronomy</dd>
		</dl>
		<dl class="row">
			<dt class="col-6"><span class="float-end"><code>Book.Proverbs</code> | <code>Book.Proverbs.BookGroupEnum</code>:</span></dt>
			<dd class="col-6">@Book.Proverbs | @Book.Proverbs.BookGroupEnum</dd>
		</dl>

	</div>
</div>

<div class="card mb-3 border-warning">
	<div class="card-header">
		<h4 class="card-title text-center">Using <code>FromValue</code> and <code>FromName</code></h4>
	</div>

	<div class="card-body">
		<dl class="row">
			<dt class="col-6"><span class="float-end"><code>Book.FromValue(3)</code>:</span></dt>
			<dd class="col-6">@Book.FromValue(3)</dd>
		</dl>
		<dl class="row">
			<dt class="col-6"><span class="float-end"><code>Book.FromName('Genesis')</code>:</span></dt>
			<dd class="col-6">@Book.FromName("Genesis")</dd>
		</dl>

	</div>
</div>

<div class="card mb-3 border-warning">
	<div class="card-header">
		<h4 class="card-title text-center"><code>Book.List.ToList()</code></h4>
	</div>
	<div class="card-body">
		<TableTemplate Items="Book.List.ToList()">
			<TableHeader>
				<th class="text-info">Id</th>
				<th class="text-primary">Name</th>
				<th class="text-danger">Abrv</th>
				<th class="text-warning">Group</th>
			</TableHeader>
			<RowTemplate>
				<td>@context.Value</td>
				<td>@context.Name</td>
				<td>@context.Abrv</td>
				<td>@context.BookGroupEnum</td>
			</RowTemplate>
		</TableTemplate>
	</div>
	<p class="card-footer text-center"><code><small>Book.List.Count</small></code>: @Book.List.Count</p>
</div>

<div class="card mb-3 border-warning">
	<div class="card-header">
		<h4 class="card-title text-center"><code>item.Dump of Book.List.OrderBy(o => o.Value)</code></h4>
	</div>

	<div class="card-body">

		@foreach (var item in Book.List.OrderBy(o => o.Value))
		{
			<ul class="list-inline">
				<li class="list-inline-item">@item.Dump</li>
			</ul>
		}

	</div>
</div>



<div class="card mb-3 border-warning">
	<div class="card-header">
		<h4 class="card-title text-center"><code>Book.List.ToList() Where BookGroupEnum == Poetry</code></h4>
	</div>
	<div class="card-body">
		<TableTemplate Items="Book.List.Where(x => x.BookGroupEnum == BookGroupEnum.Poetry).ToList()">
			<TableHeader>
				<th class="text-info">Id</th>
				<th class="text-primary">Name</th>
				<th class="text-danger">Abrv</th>
				<th class="text-warning">Group</th>
			</TableHeader>
			<RowTemplate>
				<td>@context.Value</td>
				<td>@context.Name</td>
				<td>@context.Abrv</td>
				<td>@context.BookGroupEnum</td>
			</RowTemplate>
		</TableTemplate>
	</div>
	<p class="card-footer text-center"><code><small>Book.List.Count</small></code>: @Book.List.Count</p>
</div>


<div class="card mb-3 border-warning">
	<div class="card-header">
		<h4 class="card-title text-center">Fluent Interface</h4>
	</div>
	<div class="card-body">
		<p class="mx-5 my-1"><code><small>Book myNumbersSmartEnum = Book.FromName("Numbers");</small></code></p>
		<p class="mx-5 my-1"><code><small>string FluentResult = "";</small></code></p>
		<p class="mx-5 my-1"><code><small>myNumbersSmartEnum</small></code></p>
		<p class="mx-5 my-1"><code><small>&nbsp;&nbsp;.When(Book.Genesis).Then(() => FluentResult = "Book.Genesis")</small></code></p>
		<p class="mx-5 my-1"><code><small>&nbsp;&nbsp;.When(Book.Numbers).Then(() => FluentResult = "Book.Numbers");</small></code></p>
	</div>

	<div class="card-body">
		<p>FluentResult: <b>@FluentResult</b></p>
	</div>
</div>


@code {
	Book myNumbersSmartEnum = Book.FromName("Numbers");

	string FluentResult = "";

	protected override void OnInitialized()
	{
		myNumbersSmartEnum
			.When(Book.Genesis).Then(() => FluentResult = "Book.Genesis")
			.When(Book.Numbers).Then(() => FluentResult = "Book.Numbers");

	}

}