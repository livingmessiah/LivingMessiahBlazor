@using LivingMessiah.Web.Pages.KeyDates.Queries
@using LivingMessiah.Web.Pages.KeyDates.Enums

@*
			Syncfusion.Blazor.Data
			- Provides methods to generate query which can be executed against data source using Syncfusion.Blazor.Data.SfDataManager.
			- Methods in this class are chainable.
*@


	<SfGrid ID="Grid" @ref="Grid"
					DataSource="@CalendarEntries"
					AllowFiltering="true">
		<GridEvents TValue="@CalendarEntry" OnActionFailure="Failure"></GridEvents>
		<GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>

		<GridTemplates>
			<DetailTemplate>
				@{
					var calendarEntry = (context as CalendarEntry);
				}
				<GridDetailComponent DateTypeEnum="calendarEntry.DateTypeEnum"
														 Detail="calendarEntry.Detail"
														 Date="calendarEntry.Date">
				</GridDetailComponent>

			</DetailTemplate>
		</GridTemplates>

		<GridSortSettings>
			<GridSortColumns>
				<GridSortColumn Field="@nameof(CalendarEntry.Date)" Direction="SortDirection.Ascending" />
			</GridSortColumns>
		</GridSortSettings>

		<GridColumns>
			<GridColumn Field=@nameof(CalendarEntry.Descr) HeaderText="Description" Width="85"
									AllowSorting="false" AllowFiltering="false">
				<Template>
					@{
						var row = (context as CalendarEntry);
						switch (row.DateTypeEnum)
						{
							case DateTypeEnum.Month:
								{
									@if (IsXsOrSm)
									{
										<h5>
											<span class="badge badge-dark"><i class="far fa-moon"></i> <b>@row.Descr</b></span>
										</h5>

									}
									else
									{
										<h3>
											<span class="badge badge-dark"><i class="far fa-moon"></i> <b>@row.Descr</b></span>
										</h3>
									}
								}

								break;

							case DateTypeEnum.Feast:
								{
									@if (IsXsOrSm)
									{
										<h5>
											<span class="badge badge-info"><i class="fas fa-glass-cheers"></i> <b>@row.Descr</b></span>
										</h5>

									}
									else
									{
										<h3>
											<span class="badge badge-info"><i class="fas fa-glass-cheers"></i> <b>@row.Descr</b></span>
										</h3>
									}
								}
								break;

							case DateTypeEnum.Season:
								{

									@if (IsXsOrSm)
									{
										<h5>
											<span class="badge @BaseSeasonSmartEnum.FromValue(row.Detail).BadgeColor">
												<i class="@BaseSeasonSmartEnum.FromValue(row.Detail).Icon"></i>
												@BaseSeasonSmartEnum.FromValue(row.Detail).Name
												@BaseSeasonSmartEnum.FromValue(row.Detail).Type
											</span>
										</h5>
									}
									else
									{
										<h3>
											<span class="badge @BaseSeasonSmartEnum.FromValue(row.Detail).BadgeColor">
												<i class="@BaseSeasonSmartEnum.FromValue(row.Detail).Icon"></i>
												@BaseSeasonSmartEnum.FromValue(row.Detail).Name
												@BaseSeasonSmartEnum.FromValue(row.Detail).Type
											</span>
										</h3>
									}

								}

								break;

							default:
								break;
						}
					}
				</Template>
			</GridColumn>

			<GridColumn Field=@nameof(CalendarEntry.DateTypeEnum) HeaderText="Type" Width="35" AllowSorting="false"
									FilterSettings="@(new FilterSettings { Type = Syncfusion.Blazor.Grids.FilterType.CheckBox })">
			</GridColumn>

			<GridColumn Field=@nameof(CalendarEntry.Date) Format="@DateFormat" HeaderText="Date" Width="60"
									AllowSorting="false" AllowFiltering="true">
			</GridColumn>

		</GridColumns>

	</SfGrid>


@if (DatabaseError)
{
	<p class="text-danger"><em>@DatabaseErrorMsg</em></p>
}
else
{
	if (DatabaseWarning)
	{
		<p class="text-warning">@DatabaseWarningMsg</p>
	}
}

@*Hidden:Lines*@

<style type="text/css" class="cssStyles">
	.position {
		background: #E0E0E0;
		border-radius: 13px;
		text-align: center;
		font-size: 13px;
		padding-top: 10px;
		width: 165px;
		height: 28px;
		padding: 8px 16px;
	}

	.table {
		display: table;
		border-collapse: separate;
		border-spacing: 10px;
		font-size: medium;
		text-align: left;
	}
</style>


@*End:Hidden*@