@page "/SukkotAdmin/DonationsGridDialogTemplate/"

@using LivingMessiah.Web.Pages.SukkotAdmin.Donations.Domain
@using LivingMessiah.Web.Pages.SukkotAdmin.Donations.Data

@using Grid = Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Popups

@using Microsoft.Extensions.Logging;

@inject ILogger<DonationsGridDialogTemplate> Logger;

<h3>Donations Grid Dialog Template</h3>

<div class="col-lg-12 control-section">
	<div class="content-wrapper">
		<div class="row">
			<SfGrid DataSource="@DonationDetails" AllowPaging="true" Toolbar="@(new string[] {"Add", "Edit" ,"Delete","Update","Cancel" })">
				<GridEvents  OnActionComplete="ActionCompleteHandler" TValue="DonationDetail">
					@*	OnRecordDoubleClick="RecordDoubleClickHandler" *@
				</GridEvents>
				<SfDataManager AdaptorInstance="typeof(SyncFusionAdaptor)" Adaptor="Adaptors.CustomAdaptor"></SfDataManager>
				<GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="@EditMode.Dialog" Dialog="DialogParams">

					<Template>
						@{
							var dtl = (context as DonationDetail);
						}
						<div>
							<div class="form-row">
								<div class="form-group col-md-4">
									<SfNumericTextBox ID="Id" @bind-Value="@(dtl.Id)" Enabled="@Check" FloatLabelType="FloatLabelType.Always"
																		Placeholder="PK Id"></SfNumericTextBox>
								</div>
								<div class="form-group col-md-4">
									<SfNumericTextBox ID="RegistrationId" @bind-Value="@(dtl.RegistrationId)" FloatLabelType="FloatLabelType.Always"
																		Placeholder="Reg"></SfNumericTextBox>
								</div>
								<div class="form-group col-md-4">
									<SfNumericTextBox ID="Detail" @bind-Value="@(dtl.Detail)" FloatLabelType="FloatLabelType.Always"
																		Placeholder="#"></SfNumericTextBox>
								</div>
							</div>

							<div class="form-row">
								<div class="form-group col-md-4">
									<SfNumericTextBox ID="Amount" @bind-Value="@(dtl.Amount)" TValue="decimal" FloatLabelType="FloatLabelType.Always" Placeholder="Amount"></SfNumericTextBox>
								</div>

								<div class="form-group col-md-4">
									<SfDatePicker ID="CreateDate" @bind-Value="@(dtl.CreateDate)" FloatLabelType="FloatLabelType.Always" Placeholder="Date">
									</SfDatePicker>
								</div>

								<div class="form-group col-md-4">
									<SfTextBox ID="CreatedBy" @bind-Value="@(dtl.CreatedBy)" FloatLabelType="FloatLabelType.Always" Placeholder="Created By"></SfTextBox>
								</div>
							</div>


							<div class="form-row">
								<div class="form-group col-md-12">
									<SfTextBox ID="Notes" @bind-Value="@(dtl.Notes)" FloatLabelType="FloatLabelType.Always" Placeholder="Notes"></SfTextBox>
								</div>
							</div>
						</div>
					</Template>

				</GridEditSettings>

				<GridColumns>

					<GridColumn Field="@nameof(DonationDetail.Id)" IsPrimaryKey="true" Width="35">
					</GridColumn>
					
					<GridColumn Field="@nameof(DonationDetail.RegistrationId)" HeaderText="Reg." Width="35">
					</GridColumn>

					<GridColumn Field=@nameof(DonationDetail.Detail) HeaderText="#" Width="35"
											ValidationRules="@(new Grid.ValidationRules{ Required=true, Number=true})">
					</GridColumn>

					<GridColumn Field=@nameof(DonationDetail.Amount) HeaderText="Amount"
											ValidationRules="@(new Grid.ValidationRules{ Required=true, Range = new double[]{1, 1000}})"
											Width="70" Format="c0" TextAlign="TextAlign.Right">
					</GridColumn>

					<GridColumn Field=@nameof(DonationDetail.Notes) HeaderText="Notes" Width="110"></GridColumn>

					<GridColumn Field=@nameof(DonationDetail.ReferenceId) HeaderText="Reference"
											ValidationRules="@(new Grid.ValidationRules{ Required=true})" Width="120">
					</GridColumn>

					<GridColumn Field=@nameof(DonationDetail.CreateDate) HeaderText="Date"
											ValidationRules="@(new Grid.ValidationRules{ Required=true})"
											Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Right" Width="70">
					</GridColumn>

					<GridColumn Field="@nameof(DonationDetail.Name)" Width="100"></GridColumn>

				</GridColumns>

				<GridEvents TValue="DonationDetail" OnActionFailure="Failure"></GridEvents>
			</SfGrid>
		</div>
	</div>
</div>

@if (DatabaseError)
{
	<p class="text-danger"><em>@DatabaseErrorMsg</em></p>
}
else
{
	if (DatabaseWarning)
	{
		<p class="text-warning">@DatabaseWarningMsg</p>
	}
}

@code {
	public IEnumerable<DonationDetail> DonationDetails { get; set; }

	private Boolean Check = false;
	private DialogSettings DialogParams = new DialogSettings { MinHeight = "400px", Width = "450px" };

	public void ActionCompleteHandler(Grid.ActionEventArgs<DonationDetail> args)
	{
		Logger.LogDebug($"args.RowData.RegistrationId: {args.RowData.RegistrationId}");
		Check = args.RequestType.ToString() == "Add" ? true : false;
	}

	//public void RecordDoubleClickHandler(RecordDoubleClickEventArgs<DonationDetail> args)
	//{
	//	Logger.LogDebug($"args.RowData: {args.RowData.ToString()}");
	//}

	void Failure(Grid.FailureEventArgs e)
	{
		DatabaseErrorMsg = $"Error inside {nameof(DonationsGridDialogEditing)}; e.Error: {e.Error}";
		Logger.LogDebug(DatabaseErrorMsg); // ToDo; don't show if in production
		DatabaseError = true;
	}

	protected bool DatabaseError { get; set; } = false;
	protected string DatabaseErrorMsg { get; set; }
	protected bool DatabaseWarning = false;
	protected string DatabaseWarningMsg { get; set; }
}
