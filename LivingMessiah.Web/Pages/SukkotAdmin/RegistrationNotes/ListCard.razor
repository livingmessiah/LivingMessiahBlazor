@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IState<State>? State

@*
	@if ( (State!.Value.NotesList != null) && (State!.Value.NotesList.Any() ) )
	{
		<h3 class="text-danger">No Registrations that have notes yet</h3>
	}
	else
	{
	}
 *@

<div class="row">
	<div class="col-12">
		<p class="text-black-50 float-end mt-3 mb-1">
			<small>
				All Rows: <b>@State!.Value.NotesList!.Count()</b>;
				Filtered Rows: <b>@State!.Value.NotesListFiltered!.Count()</b>
			</small>
		</p>
	</div>
</div>

@foreach (var item in State!.Value.NotesListFiltered!)
{
	<div class="card text-dark bg-light mb-3">


		<div class="card-header">

			<div class="container d-flex justify-content-between">
				<p><b>@item.FirstName @item.FamilyName</b></p>
				<p>
					<a href="tel:@item.Phone" title="@item.PhoneNumber">@item.PhoneNumber</a>&nbsp;<i class="fa fa-phone"></i>
				</p>
				<p>
					<a href="mailto:@item.EMail" title="@item.EMail">@item.EMail</a>&nbsp;<i class="far fa-envelope"></i>
				</p>
			</div>

		</div>


		@if (State!.Value.CurrentFilter == Enums.Filter.All)
		{
			<div class="row">
				<div class="col-sm-6">

					@if (!String.IsNullOrEmpty(item.AdminNotes))
					{
						<div class="card-body @Enums.Filter.Admin.CssBgColor">
							<p class="card-text">@item.AdminNotes </p>
						</div>
					}
				</div>
				<div class="col-sm-6">
					@if (!String.IsNullOrEmpty(item.UserNotes))
					{
						<div class="card-body @Enums.Filter.User.CssBgColor">
							<p class="card-text">@item.UserNotes </p>
						</div>
					}
				</div>
			</div>
		}
		else
		{
			@if (!String.IsNullOrEmpty(item.AdminNotes))
			{
				<div class="card-body @Enums.Filter.Admin.CssBgColor">
					<p class="card-text ms-5">@item.AdminNotes </p>
				</div>
			}

			@if (!String.IsNullOrEmpty(item.UserNotes))
			{
				<div class="card-body @Enums.Filter.User.CssBgColor">
					<p class="card-text ms-5">@item.UserNotes </p>
				</div>
			}
		}
	</div>
}


@code {
}
